@mixin font-calculator($fontFamily, $fontSize, $divider: null) {

 $fontSizeEm: strip-units($fontSize) / basefont-to-pixel($baseFontSize);
 font-size: #{$fontSizeEm}#{"em"};
 font-family: #{$fontFamily};

 @if $divider == 0 {
  $margin: null;
 } @else if $divider == 2 {
  $margin: (strip-units($baseLineHeight) / $fontSizeEm) * 2;
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 } @else if $divider == 1 {
  $margin: (strip-units($baseLineHeight) / $fontSizeEm);
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 } @else if $divider == 1.5 {
  $margin: (strip-units($baseLineHeight) / $fontSizeEm) * 1.5;
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 } @else if $divider == 0.5 {
  $margin: strip-units($baseLineHeight) / $fontSizeEm / 2;
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 } @else if $divider == 0.25 {
  $margin: strip-units($baseLineHeight) / $fontSizeEm / 4;
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 } @else if $divider == null {
  $margin: strip-units($baseLineHeight) / $fontSizeEm;
  margin-bottom: #{double-size($fontSize, $margin)}#{"em"};
 }

}

// media queries mixin
@mixin breakpoint($name) {
 @if $name == "wide" {
  @media (max-width: $media_breakpoint_wide) {
   @content;
  }
 } @else if $name == "tablet" {
  @media (max-width: $media_breakpoint_tablet) {
   @content;
  }
 } @else if $name == "mobile" {
  @media (max-width: $media_breakpoint_mobile) {
   @content;
  }
 } @else if $name == "ipad" {
  // check that this works
  @media (max-device-width: 1024px) and (-webkit-min-device-pixel-ratio: 2), not all, (min-resolution: 2dppx), (min-resolution: 192dpi) {
   @content;
  }
 } @else if $name == "ipadlandscape" {
  // check that this works
  @media (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2), not all, (min-resolution: 2dppx), (min-resolution: 192dpi) {
   @content;
  }
 } @else if $name == "ipadportrait" {
  // check that this works
  @media (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2), not all, (min-resolution: 2dppx), (min-resolution: 192dpi) {
   @content;
  }
 } @else if $name == "retina" {
  // check that this works
  @media (-webkit-min-device-pixel-ratio: 2), not all, (min-resolution: 2dppx), (min-resolution: 192dpi) {
   @content;
  }
 } @else if $name == "mintablet" {
  @media (min-device-width: 768px) and (orientation: landscape) {
   @content;
  }
 }
}

@mixin for-size($size) {

 @if $size == phone-only {
  @media (max-width: 599px) {
   @content;
  }
 } @else if $size == tablet-portrait-up {
  @media (min-width: 600px) {
   @content;
  }
 } @else if $size == tablet-landscape-up {
  @media (min-width: 900px) {
   @content;
  }
 } @else if $size == desktop-up {
  @media (min-width: 1200px) {
   @content;
  }
 } @else if $size == big-desktop-up {
  @media (min-width: 1800px) {
   @content;
  }
 }

}

// sharper fonts
@mixin font-sharp() {
 text-rendering: optimizeLegibility;
 font-kerning: normal;
 font-feature-settings: "liga", "kern";
}

// Overflow Ellipsis
@mixin ellipsis() {
 overflow: hidden;
 white-space: nowrap;
 text-overflow: ellipsis;
}

// Word Wrapping
@mixin word-wrap() {
 word-break: break-all;
 hyphens: auto;
}

@mixin word-nowrap() {
 word-break: normal;
 hyphens: none;
}